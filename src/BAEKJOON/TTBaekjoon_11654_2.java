package BAEKJOON;

public class TTBaekjoon_11654_2 {
    public static void main(String[] args) throws Exception{
        int N = System.in.read();
        System.out.println(N);

    }
}
/*
System.in 은 byte 값으로 문자 한 개만 읽으면서
해당 문자에 대응되는 아스키코드 값을 저장할 수 있다.

*그리고 반드시 주의해야 할 점은 예외처리를 해주어야한다.
IOException (java.io 패키지를 import 해야함) 로 메인 옆에 써주어도 되고,
그냥 Exception 으로 처리해도 된다.

**프로그래밍에서 예외는 error라고 생각하시면 편합니다.
이 Exception이 발생하는 이유는 개발자의 실수나 예기치 못한 상황 등 여러 가지입니다.
기껏 만든 애플리케이션이 Exception이 발생하여 구동이 멈춘다거나 하면 상당히 곤란할 것입니다.
이러한 예외의 종류에는 크게 2가지가 있습니다.
컴파일 시 발생하는 컴파일 에러, 프로그램이 구동되는 중에 발생하는 런타임 에러가 있습니다.
컴파일 오류의 경우 대체로 문법상의 오류 때문에 많이 발생합니다.
런타임 오류의 경우 설계가 잘못되어 발생하는 경우가 많습니다.

throw, throws와 같은 예외 던지기의 경우 예전에 자바 공부를 할 때 저도 많이 헷갈렸던 부분입니다.
일단 throw의 경우 개발자가 의도적으로 예외를 발생시키는 것입니다.
throw라는 키워드를 이용하며, 주로 비즈니스 로직을 구현하는 과정 중 컴파일에는 문제가 없지만
해당 비지니스 로직이 개발자가 의도한 대로 통과하지 못했을 경우 고의로 예외를 발생시켜야 할 때 사용합니다.
 */